#pragma experiment("BRIDGE_CONNECT")
#pragma experiment("MODULE_TEMPLATING")
#pragma experiment("FOR_LOOP")

import Addressor
import Electrical
import Capacitor
import ElectricLogic
import ElectricPower
import I2C

from "pca95xx.ato" import NXP_Semiconductors_PCA95xx_base_driver

from "parts/NXP_Semicon_PCA9554PW_118/NXP_Semicon_PCA9554PW_118.ato" import NXP_Semicon_PCA9554PW_118_package
from "parts/NXP_Semicon_PCA9554APW_118/NXP_Semicon_PCA9554APW_118.ato" import NXP_Semicon_PCA9554APW_118_package
from "parts/NXP_Semicon_PCA9554BS_118/NXP_Semicon_PCA9554BS_118.ato" import NXP_Semicon_PCA9554BS_118_package
from "parts/NXP_Semicon_PCA9554ABS_118/NXP_Semicon_PCA9554ABS_118.ato" import NXP_Semicon_PCA9554ABS_118_package


module NXP_Semiconductors_PCA9554x_driver from NXP_Semiconductors_PCA95xx_base_driver:
    """
    NXP Semiconductors PCA9554/PCA9554A driver
    """
    # external interfaces (not in base driver)
    io = new ElectricLogic[8]
    interrupt = new ElectricLogic

    # Addressor
    addressor = new Addressor<address_bits=3>
    for address_line in addressor.address_lines:
        address_line.reference ~ power
    assert addressor.address is i2c.address

    # decoupling capacitor
    decoupling_capacitor = new Capacitor
    power.vcc ~> decoupling_capacitor ~> power.gnd
    decoupling_capacitor.value = 100nF +/- 10%
    decoupling_capacitor.package = "C0402"


module NXP_Semiconductors_PCA9554_driver from NXP_Semiconductors_PCA9554x_driver:
    """
    NXP Semiconductors PCA9554
    - 8-bit I2C-bus and SMBus I/O port with interrupt
    - Same as PCA9554A except for I2C base address
    - Operating power supply voltage range of 2.3 V to 5.5 V
    - 5 V tolerant I/Os
    - Polarity Inversion register
    - Active LOW interrupt output
    - Low standby current
    - Noise filter on SCL/SDA inputs
    - No glitch on power-up
    - Internal power-on reset
    - 8 I/O pins which default to 8 inputs
    - 0 Hz to 400 kHz clock frequency
    - ESD protection exceeds 2000 V HBM per JESD22-A114 and 1000 V CDM per JESD22-C101
    - Latch-up testing is done to JEDEC Standard JESD78 which exceeds 100 mA
    - AEC-Q100 compliance available
    """
    assert addressor.base is 0x20

module NXP_Semiconductors_PCA9554A_driver from NXP_Semiconductors_PCA9554x_driver:
    """
    NXP Semiconductors PCA9554A
    - 8-bit I2C-bus and SMBus I/O port with interrupt
    - Same as PCA9554 except for I2C base address
    - Operating power supply voltage range of 2.3 V to 5.5 V
    - 5 V tolerant I/Os
    - Polarity Inversion register
    - Active LOW interrupt output
    - Low standby current
    - Noise filter on SCL/SDA inputs
    - No glitch on power-up
    - Internal power-on reset
    - 8 I/O pins which default to 8 inputs
    - 0 Hz to 400 kHz clock frequency
    - ESD protection exceeds 2000 V HBM per JESD22-A114 and 1000 V CDM per JESD22-C101
    - Latch-up testing is done to JEDEC Standard JESD78 which exceeds 100 mA
    - AEC-Q100 compliance available
    """
    assert addressor.base is 0x38

module NXP_Semicon_PCA9554PW_driver from NXP_Semiconductors_PCA9554_driver:
    """NXP Semiconductors PCA9554 TSSOP16 package"""
    package = new NXP_Semicon_PCA9554PW_118_package

    # connections to package
    package.A0 ~ addressor.address_lines[0].line
    package.A1 ~ addressor.address_lines[1].line
    package.A2 ~ addressor.address_lines[2].line
    package.nINT ~ interrupt.line
    package.I_O0 ~ io[0].line
    package.I_O1 ~ io[1].line
    package.I_O2 ~ io[2].line
    package.I_O3 ~ io[3].line
    package.I_O4 ~ io[4].line
    package.I_O5 ~ io[5].line
    package.I_O6 ~ io[6].line
    package.I_O7 ~ io[7].line
    package.SCL ~ i2c.scl.line
    package.SDA ~ i2c.sda.line
    package.VDD ~ power.hv
    package.VSS ~ power.lv


module NXP_Semicon_PCA9554APW_driver from NXP_Semiconductors_PCA9554A_driver:
    """NXP Semiconductors PCA9554A TSSOP16 package"""
    package = new NXP_Semicon_PCA9554APW_118_package

    # connections to package
    package.A0 ~ addressor.address_lines[0].line
    package.A1 ~ addressor.address_lines[1].line
    package.A2 ~ addressor.address_lines[2].line
    package.nINT ~ interrupt.line
    package.IO0 ~ io[0].line
    package.IO1 ~ io[1].line
    package.IO2 ~ io[2].line
    package.IO3 ~ io[3].line
    package.IO4 ~ io[4].line
    package.IO5 ~ io[5].line
    package.IO6 ~ io[6].line
    package.IO7 ~ io[7].line
    package.SCL ~ i2c.scl.line
    package.SDA ~ i2c.sda.line
    package.VDD ~ power.hv
    package.VSS ~ power.lv


module NXP_Semicon_PCA9554ABS_driver from NXP_Semiconductors_PCA9554A_driver:
    """NXP Semiconductors PCA9554A HVQFN16(4x4mm) package"""
    package = new NXP_Semicon_PCA9554ABS_118_package

    # connections to package
    package.A0 ~ addressor.address_lines[0].line
    package.A1 ~ addressor.address_lines[1].line
    package.A2 ~ addressor.address_lines[2].line
    package.nINT ~ interrupt.line
    package.IO0 ~ io[0].line
    package.IO1 ~ io[1].line
    package.IO2 ~ io[2].line
    package.IO3 ~ io[3].line
    package.IO4 ~ io[4].line
    package.IO5 ~ io[5].line
    package.IO6 ~ io[6].line
    package.IO7 ~ io[7].line
    package.SCL ~ i2c.scl.line
    package.SDA ~ i2c.sda.line
    package.VDD ~ power.hv
    package.VSS ~ power.lv



module NXP_Semicon_PCA9554BS_driver from NXP_Semiconductors_PCA9554_driver:
    """NXP Semiconductors PCA9554 HVQFN16(4x4mm) package"""
    package = new NXP_Semicon_PCA9554BS_118_package

    # connections to package
    package.A0 ~ addressor.address_lines[0].line
    package.A1 ~ addressor.address_lines[1].line
    package.A2 ~ addressor.address_lines[2].line
    package.nINT ~ interrupt.line
    package.IO0 ~ io[0].line
    package.IO1 ~ io[1].line
    package.IO2 ~ io[2].line
    package.IO3 ~ io[3].line
    package.IO4 ~ io[4].line
    package.IO5 ~ io[5].line
    package.IO6 ~ io[6].line
    package.IO7 ~ io[7].line
    package.SCL ~ i2c.scl.line
    package.SDA ~ i2c.sda.line
    package.VDD ~ power.hv
    package.VSS ~ power.lv
