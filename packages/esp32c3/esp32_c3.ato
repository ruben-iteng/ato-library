#pragma experiment("BRIDGE_CONNECT")
#pragma experiment("FOR_LOOP")

import ElectricLogic
import ElectricPower
import I2C
import SPI
import UART_Base
import JTAG
import USB2_0
import Capacitor
import Resistor
import FilterElectricalRC

from "ruben-iteng/switches/buttons.ato" import ButtonSKRPACE010

from "parts/Espressif_Systems_ESP32_C3_MINI_1_N4/Espressif_Systems_ESP32_C3_MINI_1_N4.ato" import Espressif_Systems_ESP32_C3_MINI_1_N4_package
from "parts/Espressif_Systems_ESP32_C3_MINI_1U_H4/Espressif_Systems_ESP32_C3_MINI_1U_H4.ato" import Espressif_Systems_ESP32_C3_MINI_1U_H4_package


module ESP32_C3_MINI_driver from ESP32_C3_MINI_1_driver:
    """
    ESP32 S3 WROOM-1 module with build-in antenna and supporting components
    """
    # package
    package = new Espressif_Systems_ESP32_C3_MINI_1_N4_package

    # connections to package
    gpio[0].line ~ package.IO0
    gpio[1].line ~ package.IO1
    gpio[2].line ~ package.IO2 # strapping pin, default floating
    gpio[3].line ~ package.IO3
    gpio[4].line ~ package.IO4
    gpio[5].line ~ package.IO5
    gpio[6].line ~ package.IO6
    gpio[7].line ~ package.IO7
    gpio[8].line ~ package.IO8 # strapping pin, default floating
    gpio[9].line ~ package.IO9 # strapping pin, default weak pull-up
    gpio[10].line ~ package.IO10
    gpio[18].line ~ package.IO18
    gpio[19].line ~ package.IO19
    gpio[20].line ~ package.RXD0
    gpio[21].line ~ package.TXD0

    enable.line ~ package.EN

    power.hv ~ package.P3V3
    power.lv ~ package.GND
    uart.rx ~ gpio[20]
    uart.tx ~ gpio[21]

    usb.usb_if.d.n ~ gpio[18]
    usb.usb_if.d.p ~ gpio[19]

    # I2C and SPI are muxable to other gpio
    i2c.scl ~ gpio[6]
    i2c.sda ~ gpio[5]

    spi.sclk ~ gpio[10]
    spi.mosi ~ gpio[7]
    spi.miso ~ gpio[8]

    jtag.tck ~ gpio[6]
    jtag.tms ~ gpio[4]
    jtag.tdi ~ gpio[5]
    jtag.tdo ~ gpio[7]
    jtag.vtref ~ power
    jtag.n_trst ~ enable


module ESP32_C3_MINI_ufl_driver from ESP32_C3_MINI_1_driver:
    """
    ESP32 S3 WROOM-1 module with u.fl antenna connector and supporting components
    """
    # package
    package = new Espressif_Systems_ESP32_C3_MINI_1U_H4_package

    # connections to package
    gpio[0].line ~ package.IO0
    gpio[1].line ~ package.IO1
    gpio[2].line ~ package.IO2 # strapping pin, default floating
    gpio[3].line ~ package.IO3
    gpio[4].line ~ package.IO4
    gpio[5].line ~ package.IO5
    gpio[6].line ~ package.IO6
    gpio[7].line ~ package.IO7
    gpio[8].line ~ package.IO8 # strapping pin, default floating
    gpio[9].line ~ package.IO9 # strapping pin, default weak pull-up
    gpio[10].line ~ package.IO10
    gpio[18].line ~ package.IO18
    gpio[19].line ~ package.IO19
    gpio[20].line ~ package.RXD0
    gpio[21].line ~ package.TXD0

    enable.line ~ package.EN

    power.hv ~ package.P3V3
    power.lv ~ package.GND
    uart.rx ~ gpio[20]
    uart.tx ~ gpio[21]

    usb.usb_if.d.n ~ gpio[18]
    usb.usb_if.d.p ~ gpio[19]

    # I2C and SPI are muxable to other gpio
    i2c.scl ~ gpio[6]
    i2c.sda ~ gpio[5]

    spi.sclk ~ gpio[10]
    spi.mosi ~ gpio[7]
    spi.miso ~ gpio[8]

    jtag.tck ~ gpio[6]
    jtag.tms ~ gpio[4]
    jtag.tdi ~ gpio[5]
    jtag.tdo ~ gpio[7]
    jtag.vtref ~ power
    jtag.n_trst ~ enable


module ESP32_C3_MINI_1_driver from ESP32_C3_MINI_1:
    """
    ESP32 S3 WROOM-1 module with build-in antenna and supporting components

    Choose between the u.fl antenna connector or the build-in antenna version:
    esp32c3 = new ESP32_C3_MINI_1_ReferenceDesign
    esp32c3.ic -> Espressif_Systems_ESP32_C3_MINI_1_N4_package # build-in antenna
    esp32c3.ic -> Espressif_Systems_ESP32_C3_MINI_1U_H4_package # u.fl antenna
    """

    # components
    boot_switch = new ButtonSKRPACE010
    reset_switch = new ButtonSKRPACE010
    decoupling_capacitor_bulk = new Capacitor
    decoupling_capacitor_small = new Capacitor
    boot_mode_resistors = new Resistor[2]
    reset_rc_filter = new FilterElectricalRC

    # connections
    power ~ decoupling_capacitor_bulk.power
    power ~ decoupling_capacitor_small.power

    boot_switch.unnamed[0] ~ gpio[9].line
    boot_switch.unnamed[1] ~ power.lv

    reset_switch.unnamed[0] ~ enable.line
    reset_switch.unnamed[1] ~ power.lv
    reset_rc_filter.in_.line ~ power.hv
    reset_rc_filter.out ~ enable
    reset_rc_filter.in_.reference ~ power

    gpio[2].line ~> boot_mode_resistors[0] ~> power.hv
    gpio[8].line ~> boot_mode_resistors[1] ~> power.hv

    # parameters
    for res in boot_mode_resistors:
        res.resistance = 10kohm +/- 1%
        res.package = "R0402"
    reset_rc_filter.resistor.resistance = 10kohm +/- 1%
    reset_rc_filter.resistor.package = "R0402"
    reset_rc_filter.capacitor.capacitance = 1uF +/- 10%
    reset_rc_filter.capacitor.package = "C0402"
    decoupling_capacitor_bulk.capacitance = 22uF +/- 20%
    decoupling_capacitor_bulk.package = "C0603"
    decoupling_capacitor_small.capacitance = 100nF +/- 10%
    decoupling_capacitor_small.package = "C0402"


module ESP32_C3_MINI_1:
    """
    ESP32 C3 MINI module
    """
    # external interfaces
    power = new ElectricPower
    i2c = new I2C
    spi = new SPI
    uart = new UART_Base
    jtag = new JTAG
    enable = new ElectricLogic
    usb = new USB2_0

    gpio = new ElectricLogic[22] # 11-17 are not exposed on the module

    # parameters
    power.voltage = 3.3V +/- 10%

    power.required = True
