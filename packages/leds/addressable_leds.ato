import ElectricPower, ElectricLogic, Capacitor

from "components/BridgableLogic.py" import BridgableLogic

from "parts/Changzhou_Amass_Elec_XT30PW_2_2__M_G_B/Changzhou_Amass_Elec_XT30PW_2_2__M_G_B.ato" import Changzhou_Amass_Elec_XT30PW_2_2__M_G_B_package


module AddressableLED_driver from BridgableLogic:
    """
    Addressable LED with decoupling capacitors.

    Usage:
    from "ruben-iteng/ato-library/leds/addressable_leds.ato" import AddressableLED

    module MyProject:
        ...
        leds = new AddressableLED[3]

        power = new ElectricPower
        data_in = new ElectricLogic

        for led in leds:
            led -> WS2812B_5050_Black
            led.power ~ power

        data_in ~> leds[0] ~> leds[1] ~> leds[2]
    """

    power = new ElectricPower

    capacitor = new Capacitor
    package = new _AddressableLED_package

    capacitor.package = "C0402"
    capacitor.capacitance = 100nF +/- 20%

    power ~ capacitor.power
    power ~ package.power
    data_in ~ package.data_in
    data_out ~ package.data_out

    power.required = True
    data_in.required = True

component WS2812B_5050_Black from _WS2812B_package:
    """WS2812B addressable LED in 5050 black package"""
    lcsc_id = "C2761795"
    manufacturer = "Worldsemi"
    mpn = "WS2812B-B/T"
    datasheet_url = "https://www.lcsc.com/datasheet/lcsc_datasheet_2412041609_Worldsemi-WS2812B-B-T_C2761795.pdf"
    designator_prefix = "LED"

    # pins
    power.hv ~ pin 1
    data_out.line ~ pin 2
    power.lv ~ pin 3
    data_in.line ~ pin 4


component WS2812B_1615 from _WS2812B_package:
    """WS2812B addressable LED in 1615 package"""
    lcsc_id = "C5349954"
    manufacturer = "XINGLIGHT"
    mpn = "XL-1615RGBC-WS2812B"
    datasheet_url = "https://www.lcsc.com/datasheet/lcsc_datasheet_2504101957_XINGLIGHT-XL-1615RGBC-WS2812B_C5349954.pdf"
    designator_prefix = "LED"

    # pins
    power.lv ~ pin 1
    data_in.line ~ pin 2
    power.hv ~ pin 3
    data_out.line ~ pin 4


component SK6812MINI_E from _SK6812_package:
    """SK6812 addressable LED in 3528 countersunk upside down package"""
    lcsc_id = "C5149201"
    manufacturer = "NORMAND"
    mpn = "SK6812MINI-E"
    datasheet_url = "https://www.lcsc.com/datasheet/lcsc_datasheet_2412101523_OPSCO-Optoelectronics-SK6812MINI-E_C5149201.pdf"
    designator_prefix = "LED"

    # pins
    power.hv ~ pin 1
    data_out.line ~ pin 2
    power.lv ~ pin 3
    data_in.line ~ pin 4


component SK6812SIDE_A from _SK6812_package:
    """SK6812 addressable LED in 4020 side-mounted package"""
    lcsc_id = "C5378721"
    manufacturer = "OPSCO Optoelectronics"
    mpn = "SK6812SIDE-A"
    datasheet_url = "https://wmsc.lcsc.com/wmsc/upload/file/pdf/v2/lcsc/2303300930_OPSCO-Optoelectronics-SK6812SIDE-A_C5378721.pdf"
    designator_prefix = "LED"

    # pins
    data_in.line ~ pin 1
    power.hv ~ pin 2
    data_out.line ~ pin 3
    power.lv ~ pin 4


component SK6812_5050_RGBW from _SK6812_package:
    """SK6812 addressable LED in 5050 package with RGB + NW-White LEDs"""
    lcsc_id = "C5380880"
    manufacturer = "OPSCO Optoelectronics"
    mpn = "SKC6812RGBW-NW-B"
    datasheet_url = "https://wmsc.lcsc.com/wmsc/upload/file/pdf/v2/lcsc/2309131055_OPSCO-Optoelectronics-SKC6812RGBW-NW-B_C5380880.pdf"
    designator_prefix = "LED"

    # pins
    power.lv ~ pin 1
    data_in.line ~ pin 2
    power.hv ~ pin 3
    data_out.line ~ pin 4


component _AddressableLED_package:
    """
    Addressable LED base component
    """

    power = new ElectricPower
    data_in = new ElectricLogic
    data_out = new ElectricLogic


component _WS2812B_package from _AddressableLED_package:
    """
    WS2812B Addressable LED base component
    """


component _SK6812_package from _AddressableLED_package:
    """
    SK6812 Addressable LED base component
    """


module AddressableLEDConnector_driver:
    """
    XT30 connector with 2 additional data pins.
    Wired for connecting to addressable LED strips.
    """

    package = new Changzhou_Amass_Elec_XT30PW_2_2__M_G_B_package

    power = new ElectricPower
    data = new ElectricLogic
    clock = new ElectricLogic

    power.hv ~ package.1
    power.lv ~ package.2
    data.line ~ package.3
    clock.line ~ package.4

    power.required = True
    data.required = True
