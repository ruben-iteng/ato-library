#pragma experiment("FOR_LOOP")
#pragma experiment("BRIDGE_CONNECT")

import ElectricPower, ElectricLogic, Electrical, Capacitor, Resistor, FilterElectricalRC
from "ruben-iteng/logic/schmitt_triggers.ato" import SN74LVC3G14DCUR

module RotaryEncoderAdvanced:
    """
    Rotary encoder + switchwith debouncing and hysteresis.

    Specialize the rotary encoder in your application:
    rot_encoder = new RotaryEncoderAdvanced
    rot_encoder.encoder -> ALPSALPINE_EC11E15244B2
    """

    # external interfaces
    a = new ElectricLogic
    b = new ElectricLogic
    switch = new ElectricLogic
    power = new ElectricPower

    # components
    encoder = new RotaryEncoderSwitch
    buffer = new SN74LVC3G14DCUR
    pull_ups = new Resistor[3]
    rc_filters = new FilterElectricalRC[3]

    for pull_up in pull_ups:
        pull_up.resistance = 10kohm +/- 1%
        pull_up.package = "R0201"

    # RC values for ~ 160Hz -3dB cutoff frequency
    for rc in rc_filters:
        rc.resistor.package = "R0201"
        rc.resistor.resistance = 10kohm +/- 1%
        rc.capacitor.package = "C0201"
        rc.capacitor.lcsc_id = "C2846674" # TODO: remove
        #rc.capacitor.capacitance = 100nF +/- 20%
        power.lv ~ rc.in_.reference.lv

    # connections
    power ~ buffer.power
    encoder.a ~> pull_ups[0] ~> power.hv
    encoder.a ~ rc_filters[0].in_.line; rc_filters[0].out ~ buffer.a[0]; buffer.y[0] ~ a
    encoder.b ~> pull_ups[1] ~> power.hv
    encoder.b ~ rc_filters[1].in_.line; rc_filters[1].out ~ buffer.a[1]; buffer.y[1] ~ b
    encoder.switch ~> pull_ups[2] ~> power.hv
    encoder.switch ~ rc_filters[2].in_.line; rc_filters[2].out ~ buffer.a[2]; buffer.y[2] ~ switch
    encoder.common ~ power.lv

component RotaryEncoderSwitch from RotaryEncoder:
    """
    Rotary encoder + switch
    """

    # external interfaces
    switch = new Electrical

component RotaryEncoder:
    """
    Rotary encoder
    """

    # external interfaces
    a = new Electrical
    b = new Electrical
    common = new Electrical

component ALPSALPINE_EC11E15244B2 from RotaryEncoderSwitch:
    """ALPSALPINE_EC11E15244B2 component"""
    lcsc_id = "C470754"
    manufacturer = "ALPSALPINE"
    mpn = "EC11E15244B2"
    datasheet_url = "https://www.lcsc.com/datasheet/lcsc_datasheet_2304140030_ALPSALPINE-EC11E15244B2_C470754.pdf"
    designator_prefix = "SW"

    # pins
    switch ~ pin E
    common ~ pin D
    common ~ pin C
    a ~ pin B
    b ~ pin A
    common ~ pin 6
    common ~ pin 7
