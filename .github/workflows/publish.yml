# This workflow is used to publish packages to the GitHub Package Registry
# It is triggered by a push or a manual workflow_dispatch event
# source: https://github.com/atopile/packages/blob/main/.github/workflows/main.yml

on:
  push:
  workflow_dispatch:

jobs:
    define-packages:
      runs-on: ubuntu-latest

      outputs:
        packages: ${{ steps.packages.outputs.packages }}

      steps:
        - uses: actions/checkout@v4

        - name: Discover Packages
          id: packages
          # find all directories with an ato.yaml from the current directory and output the list as a json array
          run: |
            echo "packages=$(find . -name "ato.yaml" -exec dirname {} \; | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"


    build:
      permissions:
        contents: read
        packages: read
      runs-on: ubuntu-latest
      needs: define-packages
      strategy:
        matrix:
          package: ${{ fromJSON(needs.define-packages.outputs.packages) }}
        fail-fast: false

      steps:
        - uses: actions/checkout@v4

        # FIXME: handle deps properly
        # ideally it'd determine if the package is in the same repo and, if so,
        # install via file instead
        - uses: atopile/setup-atopile@v1
          with:
            # ato-config: "packages/${{ matrix.package }}/ato.yaml"
            version: "main"

        - run: ato sync
          working-directory: ${{ matrix.package }}
        - run: ato build
          working-directory: ${{ matrix.package }}


    publish:
      if: ${{ github.ref == 'refs/heads/main' }}
      runs-on: ubuntu-latest
      needs: build
      strategy:
        matrix:
          package: ${{ fromJSON(needs.define-packages.outputs.packages) }}
        fail-fast: false

      permissions:
        id-token: write
        contents: read

      steps:
        - uses: actions/checkout@v4
        - uses: atopile/publish-package@v1
          with:
            # ato-config: "packages/${{ matrix.package }}/ato.yaml"
            atopile-version: "main"
            package-entrypoint: ${{ matrix.package }}
            skip-duplicate-versions: true
            package-version: ""  # Use the embedded version key
